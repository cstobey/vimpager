#!/bin/sh
#
# Script for using ViM as a PAGER.
# Based on Bram's less.sh.
# git://github.com/rkitover/vimpager.git

version_tag=2.06

# Just pass through if not on a tty
if [ ! -t 1 ]; then
    exec cat "$@"
fi

# FIND REAL PARENT DIRECTORY
link=$0

while [ -h "$link" ]; do
    ls0=`ls -l "$link"`
    new_link=`expr "$ls0" : '.* -> \(.*\)$'`
    if expr "$new_link" : '/.*' > /dev/null; then
        link="$new_link"
    else
        link=`dirname "$link"`/"$new_link"
    fi
done

project_dir=`dirname "$link"`
# END OF FIND REAL PARENT DIRECTORY

. "$project_dir/inc/prologue.sh"

version="$(cd "$project_dir" && git describe 2>/dev/null) (git)" || version="$version_tag (checkout)"
runtime='$project_dir'
vimcat='$project_dir/vimcat'
system_vimpagerrc='$project_dir/vimpagerrc'

case "$(uname -s)" in
    Linux) linux=1 ;;
    SunOS) solaris=1 ;;
    Darwin) osx=1; bsd=1 ;;
    CYGWIN*) cygwin=1; win32=1 ;;
    MINGW*) msys=1; win32=1 ;;
    MSYS*) msys=1; win32=1 ;;
    OpenBSD) openbsd=1; bsd=1 ;;
    FreeBSD) freebsd=1; bsd=1 ;;
    NetBSD) netbsd=1; bsd=1 ;;
    *) bsd=1 ;;
esac

# special handling to rewrite cygwin/msys paths to windows POSIX paths
if [ -n "$win32" ] && command -v cygpath >/dev/null; then
    _have_cygpath=1
fi

if command -v gawk >/dev/null; then
    _awk=gawk
elif command -v nawk >/dev/null; then
    _awk=nawk
elif command -v mawk >/dev/null; then
    _awk=mawk
elif [ -x /usr/xpg4/bin/awk ]; then
    _awk=/usr/xpg4/bin/awk
elif command -v awk >/dev/null; then
    _awk=awk
else
    echo "ERROR: No awk found!" >&2
    quit 1
fi

if command -v gsed >/dev/null; then
    _sed=gsed
elif [ -x /usr/xpg4/bin/sed ]; then
    _sed=/usr/xpg4/bin/sed
elif command -v sed >/dev/null; then
    _sed=sed
else
    echo "ERROR: No sed found!" >&2
    quit 1
fi

if command -v ggrep >/dev/null; then
    _grep=ggrep
elif [ -x /usr/xpg4/bin/grep ]; then
    _grep=/usr/xpg4/bin/grep
elif command -v grep >/dev/null; then
    _grep=grep
else
    echo "ERROR: No grep found!" >&2
    quit 1
fi

# check that grep -Eq works
if [ -z "$(echo foo | "$_grep" -Eq foo >/dev/null 2>&1)" -a $? -eq 0 ]; then
    _have_grep_E_q=1
fi

if command -v ghead >/dev/null; then
    _head=ghead
else
    _head=head
fi

if [ "$(echo xx | head -n 1 2>/dev/null)" = "xx" ]; then
    _head_syntax=new
else
    if ! head -1 -- "$0" >/dev/null 2>&1; then
        _head_no_double_dash=1
    fi
fi

# this is compatible with osed
ANSI_RE='\[[;?]*[0-9.;]*[A-Za-z]'

. "$project_dir/inc/vimpager_functions.sh"
# INCLUDE BUNDLED SCRIPTS HERE
# END OF BUNDLED SCRIPTS

main "$@"

# Copyright (c) 2016, Rafael Kitover <rkitover@gmail.com> and
# Contributors (below.)
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# CONTRIBUTORS:
#
# Rafael Kitover
# Antonio Ospite
# Jean-Marie Gaillourdet
# Perry Hargrave
# Koen Smits
# Ivan S. Freitas <ivansichfreitas@gmail.com>
# Wout Mertens (Solaris compatibility, less processes)
# Jacobo de Vera (add -X option for faster startup)
# Damien Pollet <damien.pollet@gmail.com>
# Peter Fern <github@obfusc8.org>
# Wei Dai <x@wei23.net>
# Iftekharul Haque <iftekharul.haque@gmail.com>
# Anselm Strauss <amsibamsi@gmail.com>
# Anisse Astier <anisse@astier.eu>
# Simon Olofsson <simon@olofsson.de>
# lickel: Adam Lickel <adam@lickel.com>
# eworm-de: Christian Hesse <mail@eworm.de>
# krijesta: Chris Chambers <krijesta@google.com>
# vincer: vince rosso <vince@locationlabs.com>
# justinkb: Paul Mulders <justinkb@gmail.com>
# nonakap: NONAKA Kimihiro <nonakap@gmail.com>
# dfechner: Dustin Fechner <fechnedu@gmail.com>
# lucc: Lucas Hoffmann <l-m-h@web.de>
# aroig: Abdo Roig-Maranges <abdo.roig@gmail.com>
# mortonfox: Morton Fox <github@mortonfox.otherinbox.com>
# mapeiqi88: <mapeiqi88@gmail.com>
# snordhausen: Stefan Nordhausen <stefan.nordhausen@axiros.com>
# renatosilva: Renato Silva <br.renatosilva@gmail.com>
# dragon788: <dragon788@users.noreply.github.com>
# ahamad-s: donnie' <ahamad-s@users.noreply.github.com>
# SethMilliken: Seth Milliken <seth.milliken@urbanairship.com>
# trapd00r: Magnus Woldrich <m@japh.se>
# ghedo: Alessandro Ghedini <alessandro@ghedini.me>
# guiniol: Guillaume Brogi <gui-gui@netcourrier.com>
# leandro-lucarella-sociomantic: Leandro Lucarella <leandro.lucarella@sociomantic.com>
# derekschrok: Derek Schrock <dereks@lifeofadishwasher.com>
# wilywampa: Jacob Niehus <jacob.niehus@gmail.com>

# vim: sw=4 et tw=0:
